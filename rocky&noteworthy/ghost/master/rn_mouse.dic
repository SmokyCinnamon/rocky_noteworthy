//---------------------------Mouse Functions--------------------------
//As you've probably guessed, this .dic file has to do with mouse functions. This includes the petting feature and what happens when you double click your ghost.
//As a note, this .dic file isn't strictly necessary - I'm pretty sure you can just clear the file and it won't hurt your ghost any, it'll just make it so you can't pet or double click them. And if you're interested in only petting or double clicking one character, all you have to do is delete the chunks of code for the other character you want to be uninvolved. However, I'm assuming most people making ghosts want to make their ghosts pettable and clickable, so this will cover the messages for both.

//Make sure to read the walkthrough page (http://www.ashido.com/ukagaka/walkthrough.html) for more details about how to properly format ghost dialogue!
//I will reiterate that you should be editing these in Notepad++, and in particular, you should set the Language to C (or Java I guess) to properly highlight all the text. It will make things A LOT EASIER for you, trust me! It will also help you keep track of your brackets in case you forget some. If you click on a line with a bracket in Notepad++, it should highlight where the other bracket ends, or turn purple if there's no finishing bracket (which you should definitely fix!)
//It will also highlight my commented lines in green, so you'll know where they are. Any line beginning with // is a commented line that the code will not read. It's just for your reference!


//--OnMouseMove
//This is a bunch of code determining who the mouse is over. Don't touch any of it.

OnMouseMove
 {
  	if nowmode != "QUIZ"
 	{
		//---- reference3 determines the character in question
		if reference3 == 0 //if the character is 0, aka the main character
		{
			//---- it will run the mouse functions for that character
			MouseMoveSakura
		}
		elseif reference3 == 3 //p[3]?
		{
			MouseMoveCactus
		}
		else //if the character isn't 0, then it must be the side character.
		{
			//---- this will run the mouse functions for the side character.
			MouseMoveKero
		}
	}
 }
 
 //*********************Advanced User Info*******************************
//These text boxes are meant for those who have an interest in expanding or using more complicated functions in their ghost. Also for my own reference in the future since I plan on using this template too, haha. If you have no interest in any of this and just want to keep things as simple as possible, feel free to skip these boxes.

//If you want to have more than two characters at any point, like for example how I added Charger with my Hunter/Smoker ghost, and you want to be able to interact with that character like you can with the others, you will have to add in that character to OnMouseMove above. You'll need to know the p[] you've assigned your third character to, which in Charger's case was 3. You can assign your third character any p you want, just be consistent about using the same p[] everytime. I touch on \p a bit more in the walkthrough.
//So anyway, as you can see above, OnMouseMove determines who the user is touching, so you'll just have to add in an elseif checking for reference3 == 3, or reference3 == 4, or whatever p number is you're using. More on elseif in the walkthrough and in bootend.dic. After that, you'll just need to copy and paste the other mouse functions below and change the name as you need (for example, MouseMoveCharger, MouseDoubleClickCharger). 

//Note though that the extra character will not be a hard-coded character like 0 and 1! You're basically tricking the program into thinking there's another character, and some functions in things like menu.dic and aitalk.dic won't work quite right if you put in a value other than 0 or 1, and you'll need to be careful about making sure to remove the third character when you're done. But luckily for you, this won't be a problem with any of the mouse functions as far as I'm aware, and you can fill them out for the third character just like you would for the two main ones.
//***********************************************************************


 //--MouseMoveSakura
 //The petting function for your main character. Remember how it was referred to as sakura in some of the descript.txt and install.txt files?
 
MouseMoveSakura
 {
	if reference4 != "" //ignore
 	{
 		stroke++ //if you move the mouse over the right areas, the stroke count will go up.
 		if stroke >= 40 //if the stroke count is above a certain number, the petting dialogue will kick in. You can change this number to make the petting take longer or shorter if you want. FLELEs have it set to 50 for some reason, which makes it take longer than this.
		{
 			stroke = 0 //resetting the stroke count
			if reference4 == "NHead" 
 			{
				if friendlylevel >=200
				{
					friendlylevel +=5
					"\0\s[6](She hums happily.)\e"
					"\0\s[6](They hum happily.)\e"
					"\0\s[6]Aw, thanks!\e"
				}
				if friendlylevel >=70
				{
					friendlylevel +=2
					"\0\s[6]Aw, thanks!\e"
					"\0\s[0]Pets are nice sometimes.\e"
					"\0\s[6](They hum happily.)\e"
					"\0\s[6](She hums happily.)\e"
				}
				elseif friendlylevel >=20
				{
					friendlylevel -=2
					"\0\s[9]Not right now.\e"
					"\0\s[9]Could you not?\e"
					"\0\s[4]Don't touch me.\e"
					"\0\s[9]I don't want to be touched right now.\e"
				}
				elseif friendlylevel <= 0
				{
					friendlylevel -=3
					"\s[7]...\w4\e"
				}
				else 
				{
					friendlylevel -=2
					"\0\s[7]Could you-! \w8\s[4](sigh) \w3\s[9]could you not?\e"
					"\0\s[4]I don't want to be touched right now.\e"
				}
 			}
 			elseif reference4 == "NFace" //Another area set up by the collisions in surfaces.txt. You can expand this list with as many elseifs as you need depending on how many collisions you've set up.
 			{
				if friendlylevel >=200
				{
					friendlylevel -=1
					"\0\s[4]Did I ever tell you not to touch my face? \w4\s[9]Because if I didn't I'm saying it now.\e"
					"\0\s[9]Don't do that.\e"
					"\0\s[9]Cut it out.\e"
					"\0\s[4]Are you trying to steal my glasses?\e"
					"\0\s[9]Could you not?\w4\s[4]I don't like that.\e"
				}
				elseif friendlylevel >=70
				{
					friendlylevel -=2
					"\0\s[4]Are you trying to steal my glasses?\e"
					"\0\s[9]Stop that.\e"
					"\0\s[9]Could you not?\w4\s[4]I don't like that.\e"
					"\0\s[4]Stop it.\e"
					"\0\s[4]Why though??\e"
 				}
				elseif friendlylevel >=20
				{
					friendlylevel -=2
					"\0\s[4]Stop it.\e"
					"\0\s[4]Cut it out.\e"
					"\0\s[4]Could you stop now?\e"
					"\0\s[4]Don't touch me.\e"
				}
				elseif friendlylevels <= 0
				{
					friendlylevel -=2
					"\0\s[7]...\w4\e"
				}
				else
				{
					friendlylevel -=2
					"\0\s[7]Stop it!\e"
					"\0\s[7]Haven't I told you to stop?! \w4Quit it!\e"
				}
				
 			}
			
 		}
	}
 	else
	{
 		// If the mouse isn't over the ghost, it'll zero out the stroke value.
		stroke = 0
 	}
}

 //---- MouseMoveKero -----------------------------------------------------------------
 //MouseMoveKero is exactly like the above, except set up for your second character. 
 
MouseMoveKero
 {
	if reference4 != ""
 	{
 		stroke++
 		if stroke >= 40
		{
			stroke = 0
			if reference4 == "Face"
			{
				uncomfortableroark += 1
				
				if friendlylevel >= 200
				{
					friendlylevel -= 3
					"\1\s[32]Hmmm...\e"
				}
				else
				{
				friendlylevel -= 6
				"\1\s[31]That's my face, yes?\e"
				"\1\s[31]Should I say thanks?\e"
				"\1\s[31]So, what do you want exactly?\e"
				"\1\s[31]Like my face that much do you?\e"
				"\1\s[31]You think you're being nice, do you?\e"
				"\1\s[31]Hi there!"
				"\1\s[17]O, wonderous strange being,\n I must say I am quite ponderous of your intentions,\n what they may be, what \f[italic,true]may\f[italic,false] they be?\n (Especially to me.)\e"
				"\1\s[31]Is there something to be gained from this?\nThe absence of something?\nNothing in the humble stead of something?\e"
				//Replace this dialogue with your secondary character's dialogue.
				}
			}
			elseif reference4 == "Head"
				{
					pettedrocky += 1
					
					if friendlylevel >= 200
					{
						"\1\s[32]Hmn...\e"
					}
					else
					{
						friendlylevel -= 1
						"\1\s[13]...You're weird.\e"
						"\1\s[32]Huh?\e"
						"\1\s[34]Hm...\e"
						//Replace this dialogue as appropriate.
					}
				}
 		}
	}
 	else
	{
 		// If the mouse isn't over the ghost, it'll zero out the stroke value.
		stroke = 0
 	}
}

MouseMoveCactus
{
if reference4 != "" //ignore
 	{
 		stroke++
 		if stroke >= 20
		{
			stroke = 0
			if reference4 == "Cactus" 
 			{
				"\p[3]\s[50]hueargh\n\n\f[italic,true](...\w4Ouch.)\f[italic,false]\e"
			}
			elseif reference4 == "Pot"
			{
				"\p[3]\s[50]\f[italic,true]You stroke the cool terracotta.\f[italic,false]\e"
			}
		}
	}
	else
	{
		stroke = 0
	}
}
//---- OnMouseDoubleClick -------------------------------------------------------
//This is set up much like OnMouseMove above, except this is checking to see if the user is double clicking on the ghost. You also don't need to touch any of this. 
//Advanced users adding a third character, the same principles from OnMouseMove apply here as well! Make sure to add an elseif with the right number for your third character.

OnMouseDoubleClick
 {
	//---- like with the OnMouseMove function above, this determines who the user is clicking on.
	
 	if reference3 == 0 //if the character is 0, aka your main character
	{
		MouseDoubleClickSakura
 	}
	elseif reference3 == 3
	{
		MouseDoubleClickCactus
	}
	else
 	{
 		MouseDoubleClickKero
	}
 }

 //---- MouseDoubleClickSakura ----------------------------------------------------------
 //Like the petting animation above, this is the reactions they have to being double clicked. These also rely on the collisions you set up in surfaces.txt! This set is specifically for the main character, as indicated by the Sakura in the name again.
 
 //*********************Advanced User Info*******************************
 //As a note, double clicking on a certain area of your ghost doesn't have to be the user hitting them. You could instead set up a collision for a piece of clothing, and then have the character talk about that bit of clothing when it's double clicked, for example. One of Smoker's double clicks gives her a high-five when she's in a certain pose. Maybe double clicking is patting them, or pointing behind them, or tapping them, or any number of things. You can be creative here with how they respond depending on what areas you've set up as collisions!
 
 //If you don't want your character to be hittable at all, you can just delete everything in MouseDoubleClickSakura except OpenSakuraMenu. So it'd look like
 
 //MouseDoubleClickSakura
 //{
 //OpenSakuraMenu
 //}
 
 //That's all there is to it. This method also applies to the secondary character, Kero, below this set.
 //***********************************************************************
 
MouseDoubleClickSakura
 {
 	if reference4 == "NFace" //Poking/general face touching, probably.
	{
		if friendlylevel >=70
		{
			friendlylevel -=3
			"\0\s[4]Please don't touch my face. \w4\s[9]It's not nice.\e"
			"\0\s[9]Um, maybe don't touch my face?\e"
			"\0\s[4]...\e"
			"\0\s[4]Please don't.\e"
		}
		elseif friendlylevel >=20
		{
			friendlylevel -=5
			"\0\s[4]Don't do that.\e"
			"\0\s[4]Don't touch me.\e"
			"\0\s[4]Please stop that.\e"
		}
		elseif friendlylevel <= 0
		{
			friendlylevel -=5
			"\0\s[7]...\w4\e"
		}
		else
		{
			friendlylevel -=5
			"\0\s[4]Stop it, \w4%(username).\e"
			"\0\s[4]D-don't... \w8\s[7]don'ttouchme...\e"
		}
 	}
	elseif reference4 == "NHead" //Pats
 	{
		if friendlylevel >=70
		{
			friendlylevel += 1
			"\0\s[6]Thank you for the pats.\e"
			"\0\s[6]You patted me!\e"
			"\0\s[6]Ehehe, thank you!\e"
		}
		elseif friendlylevel >=20
		{
			friendlylevel -=1
			"\0\s[9]Please don't do that right now.\e"
			"\0\s[9]Don't touch me.\e"
			"\0\s[9]I don't want to be touched right now.\e"
		}
		elseif friendlylevel <= 0
		{
			friendlylevel -=1
			"\0\s[7]...\w4\e"
		}
		else
		{
			friendlylevel -=1
			"\0\s[4]don't touch me.\e"
			"\0\s[4]I really don't want to be touched right now.\e"
		}
 	}
	else
 	{
		//Otherwise, if the user doubleclicks somewhere else on the character, they will open their menu as detailed in menu.dic.
 		OpenSakuraMenu
	}
 }

 
 //---- MouseDoubleClickKero -----------------------------------------------------------
 //This is just the same as MouseDoubleClickSakura above, except for your secondary character. The same principles apply, including how to make your character unhittable.
 
 
MouseDoubleClickKero
 {
 	if reference4 == "Face" //Triangle doesn't have a separate head really, being a triangle, so this only happens if you doubleclick his face.
	{
	friendlylevel -= 5
		"\1\s[34]Point well made, I see.\e"
		"\1\s[17]Thanks!\e"
		"\1\s[14]Hey, that's mean!\e"
		//Replace the dialogue here for the second character with whatever you want. What I said above about adding or trimming still holds here.
 	}
	elseif reference4 == "Head"
	{
	friendlylevel -= 5
		"\1\s[34]Point well made, then.\e"
		"\1\s[34]Thanks!\e"
		"\1\s[14]Hey, that's mean!\e"
	}
	else //Otherwise if you click anywhere else on Triangle's body
 	{
		OpenKeroMenu //This will open his menu set up in menu.dic.
	}
 }
 
 MouseDoubleClickCactus
 {
	 if reference4 == "Cactus"
	 {
		 "\p[3]\s[50]\f[italic,true](Spines.\w4 Spines in your hand.\w4\nOuch.)\e"
	 }
	 elseif reference4 == "Pot"
	 {
		 "\p[3]\s[50]\f[italic,true]You want to break it? Huh? You want to set this thing loose on your computer?\f[italic,false]\e"
	 }
	 else
	 {
		 OpenCactusMenu
	 }
 }
 
 OnMouseEnter
 {
 if reference3 == 3
 {
	MouseEnterCactus
 }
 else
 {
	MouseEnterKero
 }
 }

/*MouseEnterSakura
{
	if reference4 == "NFace"
	{
		"\0\s[0]...\e"
	}
}*/

/*MouseEnterCactus
{
	if reference4 == "Cactus"
	{
		"\p[3]\s[50]Hueargh\e"
	}
	else
	{
		"\p[3]\s[50]\f[italic,true]We could make a pot joke, but we won't.\f[italic,false]\e"
	}
}

MouseEnterKero
{
	if reference4 == "Head"
	{
		"\1\s[17]Oh hi there.\e"
	}
} */
 //*********************Advanced User Info*******************************
 //There are other mouse related functions you could set up much like the above, such as OnMouseDragStart, OnMouseDragEnd, OnMouseWheel, and others which correspond to various things you can do with your mouse. You can probably guess what those functions do just by their names - OnMouseWheel would be if someone spun their mouse wheel over a certain area, for example. If you're interested in these, I'd recommend doing some reading at the CROW-SSP Encyclopedia to get a better idea of them and settle down for some trial and error learning as you try to put them in.
 //***********************************************************************